# Usar imagen base con PHP 8.2 y Apache
FROM php:8.2-apache

# Habilitar módulos de Apache
RUN a2enmod rewrite headers
RUN a2enmod proxy_http

# Instalar extensiones de PHP
RUN apt-get update && apt-get install -y \
    git \
    libzip-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libxml2-dev \
    libonig-dev \
    libcurl4-openssl-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd zip pdo pdo_mysql xml curl opcache

# Instalar Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Permitir usar Composer como root
ENV COMPOSER_ALLOW_SUPERUSER=1

# Copiar el contenido del proyecto Laravel desde api-mi al contenedor
COPY api-mi /var/www/html
WORKDIR /var/www/html

# Instalar dependencias PHP del proyecto
RUN composer install

# Asignar permisos apropiados
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && find /var/www/html -type f -exec chmod 644 {} \; \
    && chown -R www-data:www-data /var/www/html/storage

# Instalar Xdebug
RUN pecl install xdebug-3.3.2 \
    && docker-php-ext-enable xdebug

# Configurar Xdebug
RUN echo 'xdebug.mode=debug' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo 'xdebug.client_host=host.docker.internal' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo 'xdebug.client_port=9003' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo 'xdebug.start_with_request=yes' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Copiar la configuración de Apache para Laravel
COPY laravel.conf /etc/apache2/sites-available/laravel.conf

# Activar el sitio Laravel
RUN a2ensite laravel.conf

# Exponer el puerto del servidor
EXPOSE 80

# Comando por defecto
CMD ["apache2-foreground"]
